# Generated by Django 4.2.7 on 2025-05-20 15:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('properties', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Lease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lease_type', models.CharField(choices=[('fixed', 'Fixed Term'), ('month_to_month', 'Month to Month'), ('week_to_week', 'Week to Week')], default='fixed', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('rent_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('security_deposit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('active', 'Active'), ('completed', 'Completed'), ('terminated', 'Terminated'), ('renewed', 'Renewed')], default='pending', max_length=20)),
                ('payment_day', models.PositiveSmallIntegerField(default=1, help_text='Day of the month rent is due')),
                ('late_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('grace_period', models.PositiveSmallIntegerField(default=5, help_text='Days after due date before late fee applies')),
                ('is_security_deposit_paid', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_leases', to=settings.AUTH_USER_MODEL)),
                ('rental_property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leases', to='properties.property')),
            ],
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(max_length=20)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('ssn_last_four', models.CharField(blank=True, max_length=4, null=True, verbose_name='Last 4 digits of SSN')),
                ('emergency_contact_name', models.CharField(blank=True, max_length=200, null=True)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('employment_status', models.CharField(blank=True, max_length=100, null=True)),
                ('employer', models.CharField(blank=True, max_length=200, null=True)),
                ('income', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tenants', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LeaseDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('lease_agreement', 'Lease Agreement'), ('addendum', 'Addendum'), ('extension', 'Extension'), ('notice', 'Notice'), ('other', 'Other')], max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to='lease_documents/')),
                ('notes', models.TextField(blank=True, null=True)),
                ('upload_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('lease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='tenants.lease')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_lease_documents', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='lease',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leases', to='tenants.tenant'),
        ),
        migrations.CreateModel(
            name='HistoricalTenant',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(max_length=20)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('ssn_last_four', models.CharField(blank=True, max_length=4, null=True, verbose_name='Last 4 digits of SSN')),
                ('emergency_contact_name', models.CharField(blank=True, max_length=200, null=True)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('employment_status', models.CharField(blank=True, max_length=100, null=True)),
                ('employer', models.CharField(blank=True, max_length=200, null=True)),
                ('income', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical tenant',
                'verbose_name_plural': 'historical tenants',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLease',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('lease_type', models.CharField(choices=[('fixed', 'Fixed Term'), ('month_to_month', 'Month to Month'), ('week_to_week', 'Week to Week')], default='fixed', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('rent_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('security_deposit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('active', 'Active'), ('completed', 'Completed'), ('terminated', 'Terminated'), ('renewed', 'Renewed')], default='pending', max_length=20)),
                ('payment_day', models.PositiveSmallIntegerField(default=1, help_text='Day of the month rent is due')),
                ('late_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('grace_period', models.PositiveSmallIntegerField(default=5, help_text='Days after due date before late fee applies')),
                ('is_security_deposit_paid', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('rental_property', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='properties.property')),
                ('tenant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'historical lease',
                'verbose_name_plural': 'historical leases',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
