# Generated by Django 4.2.7 on 2025-05-20 15:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('zip_code', models.CharField(max_length=20)),
                ('country', models.CharField(default='United States', max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('bedrooms', models.PositiveSmallIntegerField(default=1)),
                ('bathrooms', models.DecimalField(decimal_places=1, default=1.0, max_digits=3)),
                ('square_feet', models.PositiveIntegerField(blank=True, null=True)),
                ('monthly_rent', models.DecimalField(decimal_places=2, max_digits=10)),
                ('security_deposit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('available', 'Available'), ('rented', 'Rented'), ('maintenance', 'Under Maintenance'), ('not_available', 'Not Available')], default='available', max_length=20)),
                ('amenities', models.TextField(blank=True, null=True)),
                ('year_built', models.PositiveIntegerField(blank=True, null=True)),
                ('acquisition_date', models.DateField(blank=True, null=True)),
                ('acquisition_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('current_value', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='properties', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Properties',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PropertyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Property Types',
            },
        ),
        migrations.CreateModel(
            name='PropertyImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='property_images/')),
                ('caption', models.CharField(blank=True, max_length=255, null=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('upload_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('rental_property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='properties.property')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('deed', 'Property Deed'), ('insurance', 'Insurance Document'), ('tax', 'Tax Document'), ('inspection', 'Inspection Report'), ('permit', 'Permit'), ('other', 'Other')], max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to='property_documents/')),
                ('notes', models.TextField(blank=True, null=True)),
                ('upload_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('rental_property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='properties.property')),
            ],
        ),
        migrations.AddField(
            model_name='property',
            name='property_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='properties', to='properties.propertytype'),
        ),
        migrations.CreateModel(
            name='HistoricalProperty',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('zip_code', models.CharField(max_length=20)),
                ('country', models.CharField(default='United States', max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('bedrooms', models.PositiveSmallIntegerField(default=1)),
                ('bathrooms', models.DecimalField(decimal_places=1, default=1.0, max_digits=3)),
                ('square_feet', models.PositiveIntegerField(blank=True, null=True)),
                ('monthly_rent', models.DecimalField(decimal_places=2, max_digits=10)),
                ('security_deposit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('available', 'Available'), ('rented', 'Rented'), ('maintenance', 'Under Maintenance'), ('not_available', 'Not Available')], default='available', max_length=20)),
                ('amenities', models.TextField(blank=True, null=True)),
                ('year_built', models.PositiveIntegerField(blank=True, null=True)),
                ('acquisition_date', models.DateField(blank=True, null=True)),
                ('acquisition_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('current_value', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('property_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='properties.propertytype')),
            ],
            options={
                'verbose_name': 'historical property',
                'verbose_name_plural': 'historical Properties',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
